//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ConsumeServicesCourseGradingWeb.Tmp {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAssessmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGradeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::ConsumeServicesCourseGradingWeb.Properties.Settings.Default.ConsumeServicesCourseGradingWeb_Tmp_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertStudentCompletedEventHandler InsertStudentCompleted;
        
        /// <remarks/>
        public event InsertAssessmentsCompletedEventHandler InsertAssessmentsCompleted;
        
        /// <remarks/>
        public event InsertGradeCompletedEventHandler InsertGradeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertStudent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertStudent(int Sid, string StudentFirstName, string StudentLastName) {
            object[] results = this.Invoke("InsertStudent", new object[] {
                        Sid,
                        StudentFirstName,
                        StudentLastName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertStudentAsync(int Sid, string StudentFirstName, string StudentLastName) {
            this.InsertStudentAsync(Sid, StudentFirstName, StudentLastName, null);
        }
        
        /// <remarks/>
        public void InsertStudentAsync(int Sid, string StudentFirstName, string StudentLastName, object userState) {
            if ((this.InsertStudentOperationCompleted == null)) {
                this.InsertStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertStudentOperationCompleted);
            }
            this.InvokeAsync("InsertStudent", new object[] {
                        Sid,
                        StudentFirstName,
                        StudentLastName}, this.InsertStudentOperationCompleted, userState);
        }
        
        private void OnInsertStudentOperationCompleted(object arg) {
            if ((this.InsertStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertStudentCompleted(this, new InsertStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAssessments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertAssessments(int AID, int SID, string AssessType, string Date, int MaxMark) {
            object[] results = this.Invoke("InsertAssessments", new object[] {
                        AID,
                        SID,
                        AssessType,
                        Date,
                        MaxMark});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAssessmentsAsync(int AID, int SID, string AssessType, string Date, int MaxMark) {
            this.InsertAssessmentsAsync(AID, SID, AssessType, Date, MaxMark, null);
        }
        
        /// <remarks/>
        public void InsertAssessmentsAsync(int AID, int SID, string AssessType, string Date, int MaxMark, object userState) {
            if ((this.InsertAssessmentsOperationCompleted == null)) {
                this.InsertAssessmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAssessmentsOperationCompleted);
            }
            this.InvokeAsync("InsertAssessments", new object[] {
                        AID,
                        SID,
                        AssessType,
                        Date,
                        MaxMark}, this.InsertAssessmentsOperationCompleted, userState);
        }
        
        private void OnInsertAssessmentsOperationCompleted(object arg) {
            if ((this.InsertAssessmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAssessmentsCompleted(this, new InsertAssessmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGrade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertGrade(int SID, int Marks, string Grade) {
            object[] results = this.Invoke("InsertGrade", new object[] {
                        SID,
                        Marks,
                        Grade});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGradeAsync(int SID, int Marks, string Grade) {
            this.InsertGradeAsync(SID, Marks, Grade, null);
        }
        
        /// <remarks/>
        public void InsertGradeAsync(int SID, int Marks, string Grade, object userState) {
            if ((this.InsertGradeOperationCompleted == null)) {
                this.InsertGradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGradeOperationCompleted);
            }
            this.InvokeAsync("InsertGrade", new object[] {
                        SID,
                        Marks,
                        Grade}, this.InsertGradeOperationCompleted, userState);
        }
        
        private void OnInsertGradeOperationCompleted(object arg) {
            if ((this.InsertGradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGradeCompleted(this, new InsertGradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void InsertStudentCompletedEventHandler(object sender, InsertStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void InsertAssessmentsCompletedEventHandler(object sender, InsertAssessmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAssessmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAssessmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    public delegate void InsertGradeCompletedEventHandler(object sender, InsertGradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1087.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591